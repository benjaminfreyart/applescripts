-- Ask the user to select a folder containing .docx files
set inputFolderPath to POSIX path of (choose folder with prompt "Select a folder containing .docx files:")

-- Ask the user to select a folder for output .md files
set outputFolderPath to POSIX path of (choose folder with prompt "Select a folder to save the converted .md files:")

-- Ask the user if they want to include nested subfolders
display dialog "Do you want to process only the selected folder or include all nested subfolders?" buttons {"Only Selected Folder", "Include Subfolders"} default button "Include Subfolders"
set includeSubfolders to button returned of result

-- Determine the find command based on user choice
if includeSubfolders is "Only Selected Folder" then
    set docxFiles to do shell script "find " & quoted form of inputFolderPath & " -maxdepth 1 -name '*.docx'"
else
    set docxFiles to do shell script "find " & quoted form of inputFolderPath & " -name '*.docx'"
end if

-- Check if any .docx files were found
if docxFiles = "" then
    display dialog "No .docx files found in the selected folder." buttons {"OK"} default button "OK"
    return
end if

-- Split the results into a list of files
set docxFileList to paragraphs of docxFiles

-- Initialize a counter for the number of files converted
set fileCount to 0

-- Loop through each .docx file and convert it using pandoc
repeat with docxFile in docxFileList
    -- Get the relative path of the .docx file using perl
    set relativePath to do shell script "perl -e 'use File::Spec; print File::Spec->abs2rel($ARGV[0], $ARGV[1]);' " & quoted form of docxFile & " " & quoted form of inputFolderPath

    -- Determine the output folder for the current .docx file
    set outputFileFolder to (outputFolderPath & do shell script "dirname " & quoted form of relativePath)
    set outputMarkdownFile to (outputFolderPath & relativePath's text 1 thru -6 & ".md") -- Change extension to .md
    set mediaFolder to (outputFolderPath & "attachments/" & relativePath's text 1 thru -6)

    -- Create the equivalent output subfolder if it doesn't exist
    do shell script "mkdir -p " & quoted form of outputFileFolder

    -- Convert the .docx file to .md
    do shell script "/usr/local/bin/pandoc -t markdown_strict --extract-media=" & quoted form of mediaFolder & " " & quoted form of docxFile & " -o " & quoted form of outputMarkdownFile

    -- Reformat image links in the Markdown file for Obsidian compatibility
    do shell script "sed -i '' -E 's#<img src=\\\"([^\\\"]+)\\\"[^>]*>#![Image](\\1)#g' " & quoted form of outputMarkdownFile

    -- Increment the file counter
    set fileCount to fileCount + 1
end repeat

-- Notify the user when the conversion is complete
display dialog "Conversion completed successfully! " & fileCount & " file(s) have been converted. All .md files and extracted media have been saved to the output folder, maintaining the original folder structure." buttons {"OK"} default button "OK"
